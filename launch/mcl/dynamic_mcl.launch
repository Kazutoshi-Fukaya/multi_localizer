<?xml version="1.0"?>
<launch>
    <arg name="config_path" default="$(find multi_localizer)/config" />
    <arg name="roomba"      default="roomba1" />
    <arg name="date"        default="20220224" />
    <!-- <arg name="date"        default="20220630" /> -->

    <!-- bag -->
    <arg name="is_bag" default="true" />
    <group if="$(arg is_bag)" >
        <arg name="file_path" default="$(env HOME)/bagfiles/experimental_file_$(arg date)" />
        <node pkg="rosbag" type="play" name="$(arg roomba)_play" args=" $(arg file_path)/$(arg roomba).bag" />
    </group>

    <!--map_server -->
    <arg name="is_map" default="true" />
    <arg name="map_name" default="static_map" />
    <group if="$(arg is_map)" >
        <node pkg="map_server" type="map_server" name="map" args="$(arg config_path)/map/$(arg map_name).yaml" />
    </group>

    <!-- tf -->
    <include file="$(find multi_localizer)/launch/tf_broadcaster.launch" >
        <arg name="roomba" value="$(arg roomba)"/>
    </include>

    <!-- pole_eliminator -->
    <include file="$(find low_performance_lidar)/launch/low_performance_lidar.launch" >
        <!-- default -->
        <arg name="roomba"  value="$(arg roomba)"/>
        <arg name="is_rviz" value="false" />

        <!-- params -->
        <arg name="range_step"      value="1" />
        <arg name="upper_threshold" value="5" />
    </include>

    <!-- semi_dynamic_map_creator -->
    <include file="$(find multi_localizer)/launch/semi_dynamic_map_creator/semi_dynamic_map_creator.launch" >
        <arg name="roomba" value="$(arg roomba)" />
    </include>

    <!-- single_mcl -->
    <arg name="is_record"        default="false" />
    <arg name="publish_obj_data" default="false" />
    <node pkg="multi_localizer" type="single_mcl" name="$(arg roomba)_single_mcl"  >
        <!-- remap -->
        <remap from="odom_in"   to="$(arg roomba)/roomba/odometry" />
        <remap from="map_in"    to="map" />
        <!-- <remap from="lsr_in"    to="$(arg roomba)/corrected_scan" /> -->
        <remap from="lsr_in"    to="$(arg roomba)/filtered_scan" />
        <remap from="pose_out"  to="$(arg roomba)/pose" />
        <remap from="poses_out" to="$(arg roomba)/poses" />
        <remap from="obj_in"    to="$(arg roomba)/object_positions" />
        <remap from="pose_in"   to="$(arg roomba)/amcl_pose" />
        <remap from="obj_out"   to="$(arg roomba)/objects_data" />

        <!-- params -->
        <param name="IS_RECORD"          value="$(arg is_record)" />
        <param name="PUBLISH_OBJ_DATA"   value="$(arg publish_obj_data)" />
        <param name="IS_TF"              value="true" />
        <param name="BASE_LINK_FRAME_ID" value="$(arg roomba)/base_link" />
        <param name="RECORD_FILE_PATH"   value="$(find multi_localizer)/record/$(arg roomba)_" />

        <!-- rosparams -->
        <rosparam command="load" file="$(arg config_path)/params/single_mcl/$(arg date)/$(arg roomba).yaml" />
    </node>

    <!-- rviz -->
    <arg name="is_rviz" default="true" />
    <group if="$(arg is_rviz)" >
        <node pkg="rviz" type="rviz" name="$(arg roomba)_rviz" args="-d $(arg config_path)/rviz/single_mcl/$(arg roomba).rviz" />
    </group>

</launch>
