<?xml version="1.0"?>
<launch>
    <!-- arg -->
    <arg name="roomba"      default="roomba1" />
    <arg name="config_path" default="$(find multi_localizer)/config" />
    <arg name="date"        default="20220630" />
    <arg name="wait_time"   default="15.0" />

    <!-- mode -->
    <arg name="use_place_recognition"  default="true" />
    <arg name="use_object_detection"   default="true" />
    <arg name="use_mutual_recognition" default="false" />

    <!-- map_server -->
    <arg name="is_map" default="true" />
    <group if="$(arg is_map)" >
        <include file="$(find ros_utils)/launch/map_server.launch" />
    </group>

    <!-- rosbag -->
    <include file="$(find ros_utils)/launch/bag_player.launch" >
        <arg name="roomba"               value="$(arg roomba)" />
        <arg name="wait_time"            value="$(arg wait_time)" />
        <arg name="file_path"            value="$(env HOME)/bagfiles/experimental_file_$(arg date)/" />
        <arg name="convertor_theta_s"    value="true" />
        <arg name="publish_objects_data" value="false" />
    </include>

    <!-- tf_utils (only static tf) -->
    <include file="$(find ros_utils)/launch/rosbag_tf.launch" >
        <arg name="roomba"       value="$(arg roomba)"/>
        <arg name="publish_pose" value="false" />
    </include>

    <!-- place_recognition -->
    <group if="$(arg use_place_recognition)" >
        <arg name="publish_img"  default="true" />
        <arg name="publish_pose" default="true" />
        <node pkg="place_recognition" type="place_recognition" name="place_recognition" output="screen" >
            <!-- remap -->
            <remap from="img_in"      to="$(arg roomba)/camera/color/image_rect_color" />
            <remap from="pr_pose_out" to="$(arg roomba)/pr_pose" />
            <remap from="img_out"     to="$(arg roomba)/vis_image" />
            <remap from="pose_out"    to="$(arg roomba)/vis_pr_pose" />

            <!-- params -->
            <param name="REFERENCE_FILE_NAME" value="$(find place_recognition)/reference_data/" />
            <param name="IMAGE_MODE"          value="rgb" />
            <param name="DETECTOR_MODE"       value="orb" />
            <param name="PUBLISH_IMG"         value="$(arg publish_img)" />
            <param name="PUBLISH_POSE"        value="$(arg publish_pose)" />
        </node>   
    </group>

    <!-- multi_localizer -->
    <arg name="publish_objects_data"   default="true" />
    <arg name="publish_markers"        default="true" />
    <node pkg="multi_localizer" type="multi_localizer_node" name="$(arg roomba)_multi_localizer" output="screen" >
        <!-- remap (mcl_base) -->
        <remap from="odom_in"     to="$(arg roomba)/roomba/odometry" />
        <remap from="pose_out"    to="$(arg roomba)/pose" />
        <remap from="poses_out"   to="$(arg roomba)/poses" />

        <!-- remap (place recognition) -->
        <remap from="pr_pose_in"  to="$(arg roomba)/pr_pose" />

        <!-- remap (object detection) -->
        <remap from="od_in"       to="$(arg roomba)/object_positions" />
        <remap from="data_out"    to="$(arg roomba)/objects_data" />
        <remap from="markers_out" to="$(arg roomba)/markers" />

        <!-- remap (mutual recognition) -->
        <remap from="ocd_in"      to="$(arg roomba)/object_color_positions" />

        <!-- mcl_base params -->
        <param name="IS_TF"                  value="true" />
        <param name="BASE_LINK_FRAME_ID"     value="$(arg roomba)/base_link" />

        <!-- place recognition params -->
        <param name="USE_PLACE_RECOGNITION"  value="$(arg use_place_recognition)" />

        <!-- object detection params -->
        <param name="USE_OBJECT_DETECTION"   value="$(arg use_object_detection)" />
        <param name="INIT_OBJECTS_FILE_NAME" value="$(arg config_path)/init_info/$(arg date).csv" />
        <param name="PUBLISH_OBJECTS_DATA"   value="$(arg publish_objects_data)" />
        <param name="PUBLISH_MARKERS"        value="$(arg publish_markers)" />
        <param name="ROBOT_NAME"             value="$(arg roomba)" />
        <rosparam command="load" file="$(arg config_path)/params/robot_name_list.yaml" />
        <rosparam command="load" file="$(arg config_path)/params/object_params.yaml" />

        <!-- mutual recognition params -->
        <param name="USE_MUTUAL_RECOGNITION" value="$(arg use_mutual_recognition)" />
        <rosparam command="load" file="$(arg config_path)/params/robot_element.yaml" />

        <!-- rosparams (multi localizer) -->
        <rosparam command="load" file="$(arg config_path)/params/multi_localizer/$(arg date)/$(arg roomba).yaml" />
    </node>

    <!-- recorder -->
    <arg name="is_record"        default="false" />
    <arg name="record_file_path" default="$(find multi_localizer)/record/$(arg roomba)_" />
    <group if="$(arg is_record)" >
        <include file="$(find ros_utils)/launch/recorder.launch" >
            <arg name="roomba"                     value="$(arg roomba)"/>
            <arg name="is_record_pose"             value="true" />
	        <arg name="is_record_object_detection" value="true" />
	        <arg name="record_file_path"           value="$(arg record_file_path)" />
        </include>
    </group>

    <!-- rviz -->
    <arg name="is_rviz" default="true" />
    <group if="$(arg is_rviz)" >
        <arg name="rviz_wait_time" default="16.0" />
        <node pkg="rviz" type="rviz" name="$(arg roomba)_rviz" args="-d $(arg config_path)/rviz/multi_localizer/$(arg roomba).rviz" launch-prefix="bash -c 'sleep $(arg rviz_wait_time); $0 $@'" />
    </group>

</launch>
